// following were autogenerated by ./scalding_gen.rb at Thu May 23 10:22:26 -0700 2013 do not edit
package com.twitter.scalding

trait GeneratedTupleConverters extends LowPriorityTupleConverters {

  implicit def tuple1Converter[A](implicit gA: TupleGetter[A]): TupleConverter[Tuple1[A]] = new TupleConverter[Tuple1[A]] {
    def apply(tup: Seq[String]) = {

      Tuple1(gA.get(tup, 0))
    }
    def arity = 1
  }

  implicit def tuple2Converter[A, B](implicit gA: TupleGetter[A],
    gB: TupleGetter[B]): TupleConverter[Tuple2[A, B]] = new TupleConverter[Tuple2[A, B]] {
    def apply(tup: Seq[String]) = {

      Tuple2(gA.get(tup, 0),
        gB.get(tup, 1))
    }
    def arity = 2
  }

  implicit def tuple3Converter[A, B, C](implicit gA: TupleGetter[A],
    gB: TupleGetter[B],
    gC: TupleGetter[C]): TupleConverter[Tuple3[A, B, C]] = new TupleConverter[Tuple3[A, B, C]] {
    def apply(tup: Seq[String]) = {

      Tuple3(gA.get(tup, 0),
        gB.get(tup, 1),
        gC.get(tup, 2))
    }
    def arity = 3
  }

  implicit def tuple4Converter[A, B, C, D](implicit gA: TupleGetter[A],
    gB: TupleGetter[B],
    gC: TupleGetter[C],
    gD: TupleGetter[D]): TupleConverter[Tuple4[A, B, C, D]] = new TupleConverter[Tuple4[A, B, C, D]] {
    def apply(tup: Seq[String]) = {

      Tuple4(gA.get(tup, 0),
        gB.get(tup, 1),
        gC.get(tup, 2),
        gD.get(tup, 3))
    }
    def arity = 4
  }

  implicit def tuple5Converter[A, B, C, D, E](implicit gA: TupleGetter[A],
    gB: TupleGetter[B],
    gC: TupleGetter[C],
    gD: TupleGetter[D],
    gE: TupleGetter[E]): TupleConverter[Tuple5[A, B, C, D, E]] = new TupleConverter[Tuple5[A, B, C, D, E]] {
    def apply(tup: Seq[String]) = {

      Tuple5(gA.get(tup, 0),
        gB.get(tup, 1),
        gC.get(tup, 2),
        gD.get(tup, 3),
        gE.get(tup, 4))
    }
    def arity = 5
  }

  implicit def tuple6Converter[A, B, C, D, E, F](implicit gA: TupleGetter[A],
    gB: TupleGetter[B],
    gC: TupleGetter[C],
    gD: TupleGetter[D],
    gE: TupleGetter[E],
    gF: TupleGetter[F]): TupleConverter[Tuple6[A, B, C, D, E, F]] = new TupleConverter[Tuple6[A, B, C, D, E, F]] {
    def apply(tup: Seq[String]) = {

      Tuple6(gA.get(tup, 0),
        gB.get(tup, 1),
        gC.get(tup, 2),
        gD.get(tup, 3),
        gE.get(tup, 4),
        gF.get(tup, 5))
    }
    def arity = 6
  }

  implicit def tuple7Converter[A, B, C, D, E, F, G](implicit gA: TupleGetter[A],
    gB: TupleGetter[B],
    gC: TupleGetter[C],
    gD: TupleGetter[D],
    gE: TupleGetter[E],
    gF: TupleGetter[F],
    gG: TupleGetter[G]): TupleConverter[Tuple7[A, B, C, D, E, F, G]] = new TupleConverter[Tuple7[A, B, C, D, E, F, G]] {
    def apply(tup: Seq[String]) = {

      Tuple7(gA.get(tup, 0),
        gB.get(tup, 1),
        gC.get(tup, 2),
        gD.get(tup, 3),
        gE.get(tup, 4),
        gF.get(tup, 5),
        gG.get(tup, 6))
    }
    def arity = 7
  }

  implicit def tuple8Converter[A, B, C, D, E, F, G, H](implicit gA: TupleGetter[A],
    gB: TupleGetter[B],
    gC: TupleGetter[C],
    gD: TupleGetter[D],
    gE: TupleGetter[E],
    gF: TupleGetter[F],
    gG: TupleGetter[G],
    gH: TupleGetter[H]): TupleConverter[Tuple8[A, B, C, D, E, F, G, H]] = new TupleConverter[Tuple8[A, B, C, D, E, F, G, H]] {
    def apply(tup: Seq[String]) = {

      Tuple8(gA.get(tup, 0),
        gB.get(tup, 1),
        gC.get(tup, 2),
        gD.get(tup, 3),
        gE.get(tup, 4),
        gF.get(tup, 5),
        gG.get(tup, 6),
        gH.get(tup, 7))
    }
    def arity = 8
  }

  implicit def tuple9Converter[A, B, C, D, E, F, G, H, I](implicit gA: TupleGetter[A],
    gB: TupleGetter[B],
    gC: TupleGetter[C],
    gD: TupleGetter[D],
    gE: TupleGetter[E],
    gF: TupleGetter[F],
    gG: TupleGetter[G],
    gH: TupleGetter[H],
    gI: TupleGetter[I]): TupleConverter[Tuple9[A, B, C, D, E, F, G, H, I]] = new TupleConverter[Tuple9[A, B, C, D, E, F, G, H, I]] {
    def apply(tup: Seq[String]) = {

      Tuple9(gA.get(tup, 0),
        gB.get(tup, 1),
        gC.get(tup, 2),
        gD.get(tup, 3),
        gE.get(tup, 4),
        gF.get(tup, 5),
        gG.get(tup, 6),
        gH.get(tup, 7),
        gI.get(tup, 8))
    }
    def arity = 9
  }

  implicit def tuple10Converter[A, B, C, D, E, F, G, H, I, J](implicit gA: TupleGetter[A],
    gB: TupleGetter[B],
    gC: TupleGetter[C],
    gD: TupleGetter[D],
    gE: TupleGetter[E],
    gF: TupleGetter[F],
    gG: TupleGetter[G],
    gH: TupleGetter[H],
    gI: TupleGetter[I],
    gJ: TupleGetter[J]): TupleConverter[Tuple10[A, B, C, D, E, F, G, H, I, J]] = new TupleConverter[Tuple10[A, B, C, D, E, F, G, H, I, J]] {
    def apply(tup: Seq[String]) = {

      Tuple10(gA.get(tup, 0),
        gB.get(tup, 1),
        gC.get(tup, 2),
        gD.get(tup, 3),
        gE.get(tup, 4),
        gF.get(tup, 5),
        gG.get(tup, 6),
        gH.get(tup, 7),
        gI.get(tup, 8),
        gJ.get(tup, 9))
    }
    def arity = 10
  }

  implicit def tuple11Converter[A, B, C, D, E, F, G, H, I, J, K](implicit gA: TupleGetter[A],
    gB: TupleGetter[B],
    gC: TupleGetter[C],
    gD: TupleGetter[D],
    gE: TupleGetter[E],
    gF: TupleGetter[F],
    gG: TupleGetter[G],
    gH: TupleGetter[H],
    gI: TupleGetter[I],
    gJ: TupleGetter[J],
    gK: TupleGetter[K]): TupleConverter[Tuple11[A, B, C, D, E, F, G, H, I, J, K]] = new TupleConverter[Tuple11[A, B, C, D, E, F, G, H, I, J, K]] {
    def apply(tup: Seq[String]) = {

      Tuple11(gA.get(tup, 0),
        gB.get(tup, 1),
        gC.get(tup, 2),
        gD.get(tup, 3),
        gE.get(tup, 4),
        gF.get(tup, 5),
        gG.get(tup, 6),
        gH.get(tup, 7),
        gI.get(tup, 8),
        gJ.get(tup, 9),
        gK.get(tup, 10))
    }
    def arity = 11
  }

  implicit def tuple12Converter[A, B, C, D, E, F, G, H, I, J, K, L](implicit gA: TupleGetter[A],
    gB: TupleGetter[B],
    gC: TupleGetter[C],
    gD: TupleGetter[D],
    gE: TupleGetter[E],
    gF: TupleGetter[F],
    gG: TupleGetter[G],
    gH: TupleGetter[H],
    gI: TupleGetter[I],
    gJ: TupleGetter[J],
    gK: TupleGetter[K],
    gL: TupleGetter[L]): TupleConverter[Tuple12[A, B, C, D, E, F, G, H, I, J, K, L]] = new TupleConverter[Tuple12[A, B, C, D, E, F, G, H, I, J, K, L]] {
    def apply(tup: Seq[String]) = {

      Tuple12(gA.get(tup, 0),
        gB.get(tup, 1),
        gC.get(tup, 2),
        gD.get(tup, 3),
        gE.get(tup, 4),
        gF.get(tup, 5),
        gG.get(tup, 6),
        gH.get(tup, 7),
        gI.get(tup, 8),
        gJ.get(tup, 9),
        gK.get(tup, 10),
        gL.get(tup, 11))
    }
    def arity = 12
  }

  implicit def tuple13Converter[A, B, C, D, E, F, G, H, I, J, K, L, M](implicit gA: TupleGetter[A],
    gB: TupleGetter[B],
    gC: TupleGetter[C],
    gD: TupleGetter[D],
    gE: TupleGetter[E],
    gF: TupleGetter[F],
    gG: TupleGetter[G],
    gH: TupleGetter[H],
    gI: TupleGetter[I],
    gJ: TupleGetter[J],
    gK: TupleGetter[K],
    gL: TupleGetter[L],
    gM: TupleGetter[M]): TupleConverter[Tuple13[A, B, C, D, E, F, G, H, I, J, K, L, M]] = new TupleConverter[Tuple13[A, B, C, D, E, F, G, H, I, J, K, L, M]] {
    def apply(tup: Seq[String]) = {

      Tuple13(gA.get(tup, 0),
        gB.get(tup, 1),
        gC.get(tup, 2),
        gD.get(tup, 3),
        gE.get(tup, 4),
        gF.get(tup, 5),
        gG.get(tup, 6),
        gH.get(tup, 7),
        gI.get(tup, 8),
        gJ.get(tup, 9),
        gK.get(tup, 10),
        gL.get(tup, 11),
        gM.get(tup, 12))
    }
    def arity = 13
  }

  implicit def tuple14Converter[A, B, C, D, E, F, G, H, I, J, K, L, M, N](implicit gA: TupleGetter[A],
    gB: TupleGetter[B],
    gC: TupleGetter[C],
    gD: TupleGetter[D],
    gE: TupleGetter[E],
    gF: TupleGetter[F],
    gG: TupleGetter[G],
    gH: TupleGetter[H],
    gI: TupleGetter[I],
    gJ: TupleGetter[J],
    gK: TupleGetter[K],
    gL: TupleGetter[L],
    gM: TupleGetter[M],
    gN: TupleGetter[N]): TupleConverter[Tuple14[A, B, C, D, E, F, G, H, I, J, K, L, M, N]] = new TupleConverter[Tuple14[A, B, C, D, E, F, G, H, I, J, K, L, M, N]] {
    def apply(tup: Seq[String]) = {

      Tuple14(gA.get(tup, 0),
        gB.get(tup, 1),
        gC.get(tup, 2),
        gD.get(tup, 3),
        gE.get(tup, 4),
        gF.get(tup, 5),
        gG.get(tup, 6),
        gH.get(tup, 7),
        gI.get(tup, 8),
        gJ.get(tup, 9),
        gK.get(tup, 10),
        gL.get(tup, 11),
        gM.get(tup, 12),
        gN.get(tup, 13))
    }
    def arity = 14
  }

  implicit def tuple15Converter[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O](implicit gA: TupleGetter[A],
    gB: TupleGetter[B],
    gC: TupleGetter[C],
    gD: TupleGetter[D],
    gE: TupleGetter[E],
    gF: TupleGetter[F],
    gG: TupleGetter[G],
    gH: TupleGetter[H],
    gI: TupleGetter[I],
    gJ: TupleGetter[J],
    gK: TupleGetter[K],
    gL: TupleGetter[L],
    gM: TupleGetter[M],
    gN: TupleGetter[N],
    gO: TupleGetter[O]): TupleConverter[Tuple15[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]] = new TupleConverter[Tuple15[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]] {
    def apply(tup: Seq[String]) = {

      Tuple15(gA.get(tup, 0),
        gB.get(tup, 1),
        gC.get(tup, 2),
        gD.get(tup, 3),
        gE.get(tup, 4),
        gF.get(tup, 5),
        gG.get(tup, 6),
        gH.get(tup, 7),
        gI.get(tup, 8),
        gJ.get(tup, 9),
        gK.get(tup, 10),
        gL.get(tup, 11),
        gM.get(tup, 12),
        gN.get(tup, 13),
        gO.get(tup, 14))
    }
    def arity = 15
  }

  implicit def tuple16Converter[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P](implicit gA: TupleGetter[A],
    gB: TupleGetter[B],
    gC: TupleGetter[C],
    gD: TupleGetter[D],
    gE: TupleGetter[E],
    gF: TupleGetter[F],
    gG: TupleGetter[G],
    gH: TupleGetter[H],
    gI: TupleGetter[I],
    gJ: TupleGetter[J],
    gK: TupleGetter[K],
    gL: TupleGetter[L],
    gM: TupleGetter[M],
    gN: TupleGetter[N],
    gO: TupleGetter[O],
    gP: TupleGetter[P]): TupleConverter[Tuple16[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]] = new TupleConverter[Tuple16[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]] {
    def apply(tup: Seq[String]) = {

      Tuple16(gA.get(tup, 0),
        gB.get(tup, 1),
        gC.get(tup, 2),
        gD.get(tup, 3),
        gE.get(tup, 4),
        gF.get(tup, 5),
        gG.get(tup, 6),
        gH.get(tup, 7),
        gI.get(tup, 8),
        gJ.get(tup, 9),
        gK.get(tup, 10),
        gL.get(tup, 11),
        gM.get(tup, 12),
        gN.get(tup, 13),
        gO.get(tup, 14),
        gP.get(tup, 15))
    }
    def arity = 16
  }

  implicit def tuple17Converter[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q](implicit gA: TupleGetter[A],
    gB: TupleGetter[B],
    gC: TupleGetter[C],
    gD: TupleGetter[D],
    gE: TupleGetter[E],
    gF: TupleGetter[F],
    gG: TupleGetter[G],
    gH: TupleGetter[H],
    gI: TupleGetter[I],
    gJ: TupleGetter[J],
    gK: TupleGetter[K],
    gL: TupleGetter[L],
    gM: TupleGetter[M],
    gN: TupleGetter[N],
    gO: TupleGetter[O],
    gP: TupleGetter[P],
    gQ: TupleGetter[Q]): TupleConverter[Tuple17[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]] = new TupleConverter[Tuple17[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]] {
    def apply(tup: Seq[String]) = {

      Tuple17(gA.get(tup, 0),
        gB.get(tup, 1),
        gC.get(tup, 2),
        gD.get(tup, 3),
        gE.get(tup, 4),
        gF.get(tup, 5),
        gG.get(tup, 6),
        gH.get(tup, 7),
        gI.get(tup, 8),
        gJ.get(tup, 9),
        gK.get(tup, 10),
        gL.get(tup, 11),
        gM.get(tup, 12),
        gN.get(tup, 13),
        gO.get(tup, 14),
        gP.get(tup, 15),
        gQ.get(tup, 16))
    }
    def arity = 17
  }

  implicit def tuple18Converter[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R](implicit gA: TupleGetter[A],
    gB: TupleGetter[B],
    gC: TupleGetter[C],
    gD: TupleGetter[D],
    gE: TupleGetter[E],
    gF: TupleGetter[F],
    gG: TupleGetter[G],
    gH: TupleGetter[H],
    gI: TupleGetter[I],
    gJ: TupleGetter[J],
    gK: TupleGetter[K],
    gL: TupleGetter[L],
    gM: TupleGetter[M],
    gN: TupleGetter[N],
    gO: TupleGetter[O],
    gP: TupleGetter[P],
    gQ: TupleGetter[Q],
    gR: TupleGetter[R]): TupleConverter[Tuple18[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R]] = new TupleConverter[Tuple18[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R]] {
    def apply(tup: Seq[String]) = {

      Tuple18(gA.get(tup, 0),
        gB.get(tup, 1),
        gC.get(tup, 2),
        gD.get(tup, 3),
        gE.get(tup, 4),
        gF.get(tup, 5),
        gG.get(tup, 6),
        gH.get(tup, 7),
        gI.get(tup, 8),
        gJ.get(tup, 9),
        gK.get(tup, 10),
        gL.get(tup, 11),
        gM.get(tup, 12),
        gN.get(tup, 13),
        gO.get(tup, 14),
        gP.get(tup, 15),
        gQ.get(tup, 16),
        gR.get(tup, 17))
    }
    def arity = 18
  }

  implicit def tuple19Converter[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S](implicit gA: TupleGetter[A],
    gB: TupleGetter[B],
    gC: TupleGetter[C],
    gD: TupleGetter[D],
    gE: TupleGetter[E],
    gF: TupleGetter[F],
    gG: TupleGetter[G],
    gH: TupleGetter[H],
    gI: TupleGetter[I],
    gJ: TupleGetter[J],
    gK: TupleGetter[K],
    gL: TupleGetter[L],
    gM: TupleGetter[M],
    gN: TupleGetter[N],
    gO: TupleGetter[O],
    gP: TupleGetter[P],
    gQ: TupleGetter[Q],
    gR: TupleGetter[R],
    gS: TupleGetter[S]): TupleConverter[Tuple19[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S]] = new TupleConverter[Tuple19[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S]] {
    def apply(tup: Seq[String]) = {

      Tuple19(gA.get(tup, 0),
        gB.get(tup, 1),
        gC.get(tup, 2),
        gD.get(tup, 3),
        gE.get(tup, 4),
        gF.get(tup, 5),
        gG.get(tup, 6),
        gH.get(tup, 7),
        gI.get(tup, 8),
        gJ.get(tup, 9),
        gK.get(tup, 10),
        gL.get(tup, 11),
        gM.get(tup, 12),
        gN.get(tup, 13),
        gO.get(tup, 14),
        gP.get(tup, 15),
        gQ.get(tup, 16),
        gR.get(tup, 17),
        gS.get(tup, 18))
    }
    def arity = 19
  }

  implicit def tuple20Converter[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T](implicit gA: TupleGetter[A],
    gB: TupleGetter[B],
    gC: TupleGetter[C],
    gD: TupleGetter[D],
    gE: TupleGetter[E],
    gF: TupleGetter[F],
    gG: TupleGetter[G],
    gH: TupleGetter[H],
    gI: TupleGetter[I],
    gJ: TupleGetter[J],
    gK: TupleGetter[K],
    gL: TupleGetter[L],
    gM: TupleGetter[M],
    gN: TupleGetter[N],
    gO: TupleGetter[O],
    gP: TupleGetter[P],
    gQ: TupleGetter[Q],
    gR: TupleGetter[R],
    gS: TupleGetter[S],
    gT: TupleGetter[T]): TupleConverter[Tuple20[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T]] = new TupleConverter[Tuple20[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T]] {
    def apply(tup: Seq[String]) = {

      Tuple20(gA.get(tup, 0),
        gB.get(tup, 1),
        gC.get(tup, 2),
        gD.get(tup, 3),
        gE.get(tup, 4),
        gF.get(tup, 5),
        gG.get(tup, 6),
        gH.get(tup, 7),
        gI.get(tup, 8),
        gJ.get(tup, 9),
        gK.get(tup, 10),
        gL.get(tup, 11),
        gM.get(tup, 12),
        gN.get(tup, 13),
        gO.get(tup, 14),
        gP.get(tup, 15),
        gQ.get(tup, 16),
        gR.get(tup, 17),
        gS.get(tup, 18),
        gT.get(tup, 19))
    }
    def arity = 20
  }

  implicit def tuple21Converter[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U](implicit gA: TupleGetter[A],
    gB: TupleGetter[B],
    gC: TupleGetter[C],
    gD: TupleGetter[D],
    gE: TupleGetter[E],
    gF: TupleGetter[F],
    gG: TupleGetter[G],
    gH: TupleGetter[H],
    gI: TupleGetter[I],
    gJ: TupleGetter[J],
    gK: TupleGetter[K],
    gL: TupleGetter[L],
    gM: TupleGetter[M],
    gN: TupleGetter[N],
    gO: TupleGetter[O],
    gP: TupleGetter[P],
    gQ: TupleGetter[Q],
    gR: TupleGetter[R],
    gS: TupleGetter[S],
    gT: TupleGetter[T],
    gU: TupleGetter[U]): TupleConverter[Tuple21[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U]] = new TupleConverter[Tuple21[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U]] {
    def apply(tup: Seq[String]) = {

      Tuple21(gA.get(tup, 0),
        gB.get(tup, 1),
        gC.get(tup, 2),
        gD.get(tup, 3),
        gE.get(tup, 4),
        gF.get(tup, 5),
        gG.get(tup, 6),
        gH.get(tup, 7),
        gI.get(tup, 8),
        gJ.get(tup, 9),
        gK.get(tup, 10),
        gL.get(tup, 11),
        gM.get(tup, 12),
        gN.get(tup, 13),
        gO.get(tup, 14),
        gP.get(tup, 15),
        gQ.get(tup, 16),
        gR.get(tup, 17),
        gS.get(tup, 18),
        gT.get(tup, 19),
        gU.get(tup, 20))
    }
    def arity = 21
  }

  implicit def tuple22Converter[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V](implicit gA: TupleGetter[A],
    gB: TupleGetter[B],
    gC: TupleGetter[C],
    gD: TupleGetter[D],
    gE: TupleGetter[E],
    gF: TupleGetter[F],
    gG: TupleGetter[G],
    gH: TupleGetter[H],
    gI: TupleGetter[I],
    gJ: TupleGetter[J],
    gK: TupleGetter[K],
    gL: TupleGetter[L],
    gM: TupleGetter[M],
    gN: TupleGetter[N],
    gO: TupleGetter[O],
    gP: TupleGetter[P],
    gQ: TupleGetter[Q],
    gR: TupleGetter[R],
    gS: TupleGetter[S],
    gT: TupleGetter[T],
    gU: TupleGetter[U],
    gV: TupleGetter[V]): TupleConverter[Tuple22[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V]] = new TupleConverter[Tuple22[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V]] {
    def apply(tup: Seq[String]) = {

      Tuple22(gA.get(tup, 0),
        gB.get(tup, 1),
        gC.get(tup, 2),
        gD.get(tup, 3),
        gE.get(tup, 4),
        gF.get(tup, 5),
        gG.get(tup, 6),
        gH.get(tup, 7),
        gI.get(tup, 8),
        gJ.get(tup, 9),
        gK.get(tup, 10),
        gL.get(tup, 11),
        gM.get(tup, 12),
        gN.get(tup, 13),
        gO.get(tup, 14),
        gP.get(tup, 15),
        gQ.get(tup, 16),
        gR.get(tup, 17),
        gS.get(tup, 18),
        gT.get(tup, 19),
        gU.get(tup, 20),
        gV.get(tup, 21))
    }
    def arity = 22
  }
}
// end of autogenerated
